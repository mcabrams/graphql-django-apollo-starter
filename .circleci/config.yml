version: 2
jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01
      # docker_layer_caching: true

    steps:
      - checkout
      - run:
          name: make .env files
          command: |
            cp .env.example .env  # make default .env file, sensitive values will be set in admin
            cp client/.env.example client/.env
            echo "SENTRY_DSN=$SENTRY_DSN" >> client/.env  # Only have to do this for client env because it needs it as build time and won't receive env variables set up in admin

      - run:
          name: build
          command: docker-compose -f docker-compose.yml -f docker-compose.test.yml build

      - run:
          name: server tests
          command: docker-compose -f docker-compose.yml -f docker-compose.test.yml run server ./wait-for.sh database:5432 -- python manage.py test

      - run:
          name: client linting
          command: docker-compose -f docker-compose.yml -f docker-compose.test.yml run client npm run lint
      - run:
          name: client tests
          command: docker-compose -f docker-compose.yml -f docker-compose.test.yml run client npm run test

      - run:
          name: e2e tests
          command: ./e2e/test.sh --no-cleanup

      - store_artifacts:
          path: e2e/cypress/videos
      - store_artifacts:
          path: e2e/cypress/screenshots
