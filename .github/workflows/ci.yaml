name: ci

on: [push]

env:
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Generate cookie cut project
      run: cookiecutter . --no-input

    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
          version: '278.0.0'
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

    - name: Authorize gcloud with docker
      run: gcloud auth configure-docker

    - name: Build and push images to registry
      working-directory: ./graphql_django_apollo_starter
      run: make build push

    - name: make .env files
      working-directory: ./graphql_django_apollo_starter
      run: |
            cp .env.example .env  # make default .env file, sensitive values will be set in admin
            cp client/.env.example client/.env
            echo "SENTRY_DSN=$SENTRY_DSN" >> client/.env  # Only have to do this for client env because it needs it as build time and won't receive env variables set up in admin

    - name: build
      working-directory: ./graphql_django_apollo_starter
      run: docker-compose -f docker-compose.yml -f docker-compose.test.yml build

    - name: server tests
      working-directory: ./graphql_django_apollo_starter
      run: docker-compose -f docker-compose.yml -f docker-compose.test.yml run server ./wait-for.sh database:5432 -- python manage.py test

    - name: client linting
      working-directory: ./graphql_django_apollo_starter
      run: docker-compose -f docker-compose.yml -f docker-compose.test.yml run client npm run lint

    - name: client tests
      working-directory: ./graphql_django_apollo_starter
      run: docker-compose -f docker-compose.yml -f docker-compose.test.yml run client npm run test

    - name: e2e tests
      working-directory: ./graphql_django_apollo_starter
      run: ./e2e/test.sh --no-cleanup

    - name: Upload e2e video artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: e2e videos
        # Directory containing files to upload
        path: ./graphql_django_apollo_starter/e2e/cypress/videos

    - name: Upload e2e screenshot artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: e2e screenshots
        # Directory containing files to upload
        path: ./graphql_django_apollo_starter/e2e/cypress/screenshots
